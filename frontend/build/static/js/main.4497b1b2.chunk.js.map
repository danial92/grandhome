{"version":3,"sources":["images/gh_1.jpg","images/gh_2.jpg","images/gh_3.jpg","components/ProjectLayout.js","components/HomeProjects.js","images/banner_img.png","components/Banner.js","Screens/HomeScreen.js","components/Message.js","components/Loader.js","Screens/ProjectsScreen.js","Screens/AdminScreen.js","Screens/LoginScreen.js","images/ghi_icon.png","components/Header.js","reducer/reducer.js","components/Footer.js","dbcomponents/InvestorForm/InvestorForm.js","dbcomponents/PropertyForm/PropertyForm.js","dbcomponents/InvestmentForm/InvestmentForm.js","dbcomponents/TransactionForm/TransactionForm.js","dbcomponents/InvestmentTable/InvestmentTable.js","dbcomponents/InvestorDataForm/InvestorDataForm.js","Screens/DBScreen.js","Screens/RandomScreen.js","Screens/CompletedProjectsScreen.js","Screens/RenovationProjects.Screen.js","Screens/UpcomingProjectsScreen.js","App.js","reportWebVitals.js","index.js"],"names":["ProjectLayout","_ref","project","_jsx","children","_jsxs","Card","className","style","width","Link","onClick","window","open","concat","link","Img","variant","src","img","Body","Title","color","address","Text","status","toUpperCase","HomeProjects","completedProjects","setCompletedProjects","useState","renovatingProjects","setRenovatingProjects","upcomingProjects","setUpcomingProjects","console","log","useEffect","async","data","axios","get","compProjects","renoProjects","upcomProjects","e","fetchProjects","textAlign","Row","slice","sort","a","b","order","reverse","map","Col","sm","md","lg","xl","_id","to","Banner","projects","setProjects","loading","setLoading","fetch","method","headers","then","res","json","catch","err","alt","bannerImg","Home","gh_1","gh_2","gh_3","Message","Alert","Loader","Spinner","animation","ProjectsScreen","height","AdminScreen","state","useContext","UserContext","setLink","setAddress","setStatus","setOrder","image","setImage","isTop","setIsTop","uploading","setUploading","success","setSuccess","display","justifyContent","_Fragment","Form","onSubmit","preventDefault","formData","FormData","append","uploadResponse","post","secure_url","top","Authorization","localStorage","getItem","Group","controlId","Label","Control","type","placeholder","value","onChange","target","File","id","label","custom","files","Check","checked","Button","LoginScreen","dispatch","history","useHistory","email","setEmail","password","setPassword","error","setError","push","InputGroup","FormControl","body","JSON","stringify","user","undefined","token","setItem","payload","Header","Navbar","bg","expand","Container","maxWidth","padding","Brand","href","margin","ghiIcon","Toggle","Collapse","Nav","LinkContainer","fontSize","fontFamily","cursor","scrollToFooter","document","getElementById","scrollIntoView","behavior","clear","reducer","action","Footer","InvestorForm","onReset","setFormData","investor_name","first_name","middle_name","last_name","email1","email2","phone_number","is_llc","company_name","address1","address2","city","zip","country","handleChange","field","prevData","PropertyForm","buy_date","sell_date","llc_name","total_investment","InvestmentForm","investors","properties","investor_id","property_id","principle","profit","investor","property","TransactionForm","investments","investment_id","from_property_id","to_property_id","amount","transaction_type","transaction_date","method_of_payment","investment","Investor","Property","InvestmentTable","InvestmentRow","_ref2","TransactionTable","_ref3","transactions","transactionArray","index","transaction","TransactionRow","transaction_id","_ref4","principle_or_profit","from_property","to_property","InvestorDataForm","investorOptions","setInvestorOptions","query","length","response","params","fetchInvestorOptions","list","name","Investments","Transactions","DBScreen","formType","setFormType","setData","setInvestors","setProperties","setInvestments","successMessage","setSuccessMessage","errorMessage","setErrorMessage","loader","setLoader","resetFormFields","handleFormSubmit","Object","keys","getInvestorError","message","investorError","PropertyError","getProperties","investors_data","investmentError","transactionError","investorResponse","propertyResponse","investmentResponse","fetchData","renderForm","RandomScreen","CompletedProjectsScreen","RenovationProjectsScreen","UpcomingProjectsScreen","createContext","Routing","parse","Route","path","component","exact","HomeScreen","App","useReducer","Provider","BrowserRouter","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","React","StrictMode"],"mappings":"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","file":"static/js/main.4497b1b2.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/gh_1.8c91a9a5.jpg\";","export default __webpack_public_path__ + \"static/media/gh_2.75c0d149.jpg\";","export default __webpack_public_path__ + \"static/media/gh_3.320d8eed.jpg\";","import React from 'react'\nimport { Card } from 'react-bootstrap'\nimport { Link } from 'react-router-dom'\n\nconst ProjectLayout = ({ project }) => {\n    return (\n            <div>\n                <Card className='my-3 py-2 px-2' style={{ width: '18rem' }}>\n                        <Link onClick={() => window.open(`${project.link}`)}>\n                            <Card.Img variant=\"top\" src={project.img} />\n                        </Link>\n                    <Card.Body>\n                    <Link onClick={() => window.open(`${project.link}`)}>\n                        <Card.Title style={{ color: 'black' }} >{project.address}</Card.Title>\n                    </Link>\n                    <Card.Text className='text-md-left'>{project.status.toUpperCase()}</Card.Text>\n                    </Card.Body>\n                </Card>\n            </div>\n    )\n}\n\nexport default ProjectLayout\n","import axios from 'axios'\nimport React, { useEffect, useState } from 'react'\nimport { Col, Row } from 'react-bootstrap'\nimport ProjectLayout from './ProjectLayout'\nimport { Link } from 'react-router-dom/cjs/react-router-dom.min'\nimport './HomeProjects.css';\n\nconst HomeProjects = () => {\n    const [completedProjects, setCompletedProjects] = useState([])\n    const [renovatingProjects, setRenovatingProjects] = useState([])\n    const [upcomingProjects, setUpcomingProjects] = useState([])\n    console.log(completedProjects)\n\n    useEffect( () => {\n        async function fetchProjects() {\n            try {\n                const { data } = await axios.get(\"/homeprojects\")\n                setCompletedProjects(data.compProjects);\n                setRenovatingProjects(data.renoProjects);\n                setUpcomingProjects(data.upcomProjects);\n            } catch (e) {\n                console.log(e)\n            }\n        }\n        fetchProjects()\n    }, []);\n\n\n    return (\n        <div>\n            <h1 style={{ textAlign: 'center' }}>Projects Completed</h1>\n            <Row>\n                    {/* {completedProjects.slice(-4).reverse().map(project => (\n                        <Col key={project._id} sm={12} md={6} lg={4} xl={3}> \n                                <ProjectLayout project={project} />\n                        </Col>\n                    ))} */}\n                    {completedProjects.slice(-4)\n                        .sort((a, b) => b.order - a.order) // Sorts in descending order\n                        .reverse().map(project => (\n                            <Col key={project._id} sm={12} md={6} lg={4} xl={3}>\n                                <ProjectLayout project={project} />\n                            </Col>\n                    ))}\n                    {/* <div className='see-more'><Link to=\"/completedprojects\">See More...</Link></div> */}\n                    <Col sm={12} className=\"text-center\"> \n                        <div className='see-more'>\n                        <h2><Link to=\"/completedprojects\">See More...</Link></h2>\n                        </div>\n                    </Col>\n                    {/*     <Col sm={12} className=\"text-center\"> \n                            <div className='see-more'>\n                                <Link to=\"/completedprojects\">\n                                    <div className=\"see-more-icon\"></div>\n                                </Link>\n                            </div>\n                        </Col> */}\n            </Row>\n            <h1 style={{ textAlign: 'center' }}>Projects Under Renovation</h1>\n            <Row>\n                    {/* {renovatingProjects.slice(-4).reverse().map(project => (\n                        <Col key={project._id} sm={12} md={6} lg={4} xl={3}> \n                                <ProjectLayout project={project} />\n                        </Col>\n                    ))} */}\n                    {renovatingProjects.slice(-4)\n                        .sort((a, b) => b.order - a.order) // Sorts in descending order\n                        .reverse().map(project => (\n                            <Col key={project._id} sm={12} md={6} lg={4} xl={3}>\n                                <ProjectLayout project={project} />\n                            </Col>\n                    ))}\n                    <Col sm={12} className=\"text-center\"> \n                        <div className='see-more'>\n                            <h2><Link to=\"/renovationprojects\">See More...</Link></h2>\n                        </div>\n                    </Col>\n                    {/* <Col sm={12} className=\"text-center\"> \n                        <div className='see-more'>\n                            <Link to=\"/renovationprojects\">\n                                <div className=\"see-more-icon\"></div>\n                            </Link>\n                        </div>\n                    </Col> */}\n            </Row>\n            <h1 style={{ textAlign: 'center' }}>Upcoming Projects</h1>\n            <Row>\n                    {/* {upcomingProjects.slice(-4).reverse().map(project => (\n                        <Col key={project._id} sm={12} md={6} lg={4} xl={3}> \n                                <ProjectLayout project={project} />\n                        </Col>\n                    ))} */}\n                    {upcomingProjects.slice(-4)\n                        .sort((a, b) => b.order - a.order) // Sorts in descending order\n                        .reverse().map(project => (\n                            <Col key={project._id} sm={12} md={6} lg={4} xl={3}>\n                                <ProjectLayout project={project} />\n                            </Col>\n                    ))}\n                    <Col sm={12} className=\"text-center\"> \n                        <div className='see-more'>\n                        <h2><Link to=\"/upcomingprojects\">See More...</Link></h2>\n                        </div>\n                    </Col>\n                    {/* <Col sm={12} className=\"text-center\"> \n                        <div className='see-more'>\n                            <Link to=\"/upcomingprojects\">\n                                <div className=\"see-more-icon\"></div>\n                            </Link>\n                        </div>\n                    </Col> */}\n            </Row>\n        </div>\n    )\n}\n\nexport default HomeProjects","export default __webpack_public_path__ + \"static/media/banner_img.8f9f5f08.png\";","// import React from 'react';\n// import './Header.css';\n\n// function Header() {\n//   return (\n//     <header className=\"header\">\n//       <h1>ABOUT GRAND HOME INVESTMENTS</h1>\n//       <p>\n//         Grand Home Investments has been building quality homes in NJ and has \n//         completed over 100 projects in NJ and PA. They have built an incomparable \n//         reputation in the area over the years through referrals and impeccable \n//         reviews by building and delivering only the highest quality of homes.\n//       </p>\n//       <p>\n//         We're creating homes that are built to last, which means that your new \n//         home is efficient and sustainable, and it uses trusted brands for building \n//         materials and appliances. We offer designs that help a house become a home. \n//         Our experienced Design Consultants will curate a personalized array of home \n//         design options just for you. We build high quality homes starting from design \n//         all the way through the entire building process.\n//       </p>\n//       <h2>RECENTLY COMPLETED HOMES</h2>\n//       <ul>\n//         <li>3770 Park Ave Edison</li>\n//         <li>182 Finderne Ave Bridgewater</li>\n//         <li>51 Dalton Pl Edison</li>\n//       </ul>\n//     </header>\n//   );\n// }\n\n// export default Header;\n\nimport React, { useEffect, useState } from 'react';\nimport './Banner.css'; // Make sure to create this CSS file\nimport bannerImg from '../images/banner_img.png';\nimport { Link } from 'react-router-dom/cjs/react-router-dom.min';\n\nfunction Banner() {\n    const [projects, setProjects] = useState([])\n    const [loading, setLoading] = useState(true)\n    console.log(projects)\n\n    useEffect(() => {\n        fetch(\"/topprojects\", {\n            method: \"get\",\n            headers: {\n                \"Content-Type\": \"application/json\"\n            }\n        })\n        .then(res => res.json())\n        .then(data => {\n            setProjects(data.projects)\n            setLoading(false)\n        })\n        .catch(err => {\n            setLoading(false)\n        });\n    }, [])\n\n  return (\n    <div className='banner-head'>\n    <div className=\"banner\">\n      <div className=\"banner-content\">\n        <h1>GRAND HOME INVESTMENTS</h1>\n        <p>\n          Grand Home Investments has been building quality homes in NJ and has completed over 100 projects in NJ and PA. \n          We have built an incomparable reputation in the area over the years through referrals and impeccable reviews by \n          building and delivering only the highest quality of homes.\n        </p>\n        {/* <br /> */}\n        <p>We are creating homes that are built to last, which means that your new home is efficient and sustainable, \n          and it uses trusted brands for building materials and appliances. We offer designs that help a house become a home. \n          Our experienced Design Consultants will curate a personalized array of home design options just for you. \n          We build high quality homes starting from design all the way through the entire building process.</p>\n          <p>\n            Halal and Safe Real Estate Investments: Your trusted partner for halal and Sharia-compliant investment options in the USA. Firstly, we understand the importance of investing in a way that aligns with our faith and values.\n            You can discover a unique opportunity to invest in real estate while adhering to halal principles. Contact us for more details.\n          </p>\n          <p>\n          We offer a safe investment environment keeping Islamic values in mind. \n          The localities in which the houses are invested are well-known areas of central New Jersey where demand is usually quite high. \n          You also become partners in the LLC that you invest in to assure complete transparency.\n          </p>\n      </div>\n      <div className=\"completed-homes\">\n        <h2>RECENTLY COMPLETED HOMES</h2>\n        <ul>\n            {\n                projects ? projects.map(project => (\n                    <Link onClick={() => window.open(`${project.link}`)}>\n                        <li>\n                            <img src={project.img} alt=\"\"/>\n                            <span>{project.address}</span>\n                        </li>\n                    </Link>\n                )) : null\n            }\n        </ul>\n      </div>\n    </div>\n    {/* <div style={{ marginLeft: '-120px' }} className='banner-logo'> */}\n    <div className='banner-logo'>\n        <img src={bannerImg} alt=\"\"  />\n    </div>\n    </div>\n  );\n}\n\nexport default Banner;","import React from 'react'\nimport gh_1 from '../images/gh_1.jpg';\nimport gh_2 from '../images/gh_2.jpg';\nimport gh_3 from '../images/gh_3.jpg';\nimport HomeProjects from '../components/HomeProjects'\nimport './styling.css';\nimport Banner from '../components/Banner';\n\nconst Home = () => {\n    return (\n        <div>\n        {/* <ProjectsCarousel /> */}\n        {/* <div className='head'>\n            <Image src={head} alt=\"\" />\n        </div> */}\n        <Banner />\n        <div className=\"about\">\n            <div className=\"about_box about_01\">\n                <img src={gh_1} className=\"rounded-circle\" alt=\"...\" />\n                <h2>Halal And Safe Investments</h2>\n                <strong><p>\n                    We offer a safe investment environment keeping the Islamic values in\n                    mind. The localities in which the houses are invested in, are well\n                    known areas of central NJ for ease of selling. Not only that, but you also\n                    become partners in the LLC that you invested in to assure complete\n                    transparency.\n                </p></strong>\n            </div>\n            <div className=\"about_box about_02\">\n                <img src={gh_2} className=\"rounded-circle\" alt=\"...\" />\n                <h2>A Proven Approach</h2>\n                <strong><p>\n                    An proven approach which is based on years of experience. \n                    We give timely updates, ease of transactions, profit\n                    analysis, that are combined with roll over opportunities.\n                    Transparency of estimates and expenses can be viewed by investors in real time. \n                    Your proceeds can easily be rolled over to upcoming\n                    projects with more chances of success, inshaAllah.\n                </p></strong>\n            </div>\n            <div className=\"about_box about_03\">\n                <img src={gh_3} className=\"rounded-circle\" alt=\"...\" />\n                <h2>Why Us?</h2>\n                <strong><p>\n                    We take the lead in assuring you that the money that sits in your\n                    bank ideally can be invested in profitable halal ventures. We make sure we\n                    analyze the markets and make comparisons before finally choosing the\n                    right property for you. We spend significant time in making sure\n                    that every potential property is researched upon in detail before\n                    making the final move. We are experienced enough to create different\n                    investment scenarios so that each decision is made wisely. Our past\n                    records makes us the right choice for you.\n                </p></strong>\n            </div>\n        </div>\n        <HomeProjects />\n    </div>\n    )\n}\n\nexport default Home","import React from 'react'\nimport { Alert } from 'react-bootstrap'\n\nconst Message = ({ variant, children }) => {\n    return (\n        <Alert variant={variant}>{children}</Alert>\n    )\n}\n\nexport default Message","import React from 'react'\nimport { Spinner } from 'react-bootstrap'\n\nconst Loader = () => {\n    return (\n        <div>\n            <Spinner animation=\"border\" variant=\"primary\">\n                <span className='sr-only'>Loading..!!!</span>\n            </Spinner>\n        </div>\n    )\n}\n\nexport default Loader\n","import React, { useEffect, useState } from 'react'\nimport { Col, Row } from 'react-bootstrap'\nimport Message from '../components/Message'\nimport ProjectLayout from '../components/ProjectLayout'\nimport Loader from '../components/Loader'\n\nconst ProjectsScreen = () => {\n\n    const [projects, setProjects] = useState([])\n    const [loading, setLoading] = useState(true)\n    console.log(projects)\n\n    useEffect(() => {\n        fetch(\"/allprojects\", {\n            method: \"get\",\n            headers: {\n                \"Content-Type\": \"application/json\"\n            }\n        })\n        .then(res => res.json())\n        .then(data => {\n            setProjects(data.projects)\n            setLoading(false)\n        })\n        .catch(err => {\n            setLoading(false)\n        });\n    }, [])\n\n\n    return (\n        <div style={{ height: '70%' }}>\n            <h2 className='text-center'>Project Gallery</h2>\n            {   \n                loading ? <Loader />\n                :\n                <Row>\n                    {!projects ? <Message variant='primary'>No Projects Yet...</Message>\n                    :\n                    projects.slice().reverse().map(project => (\n                        <Col key={project._id} sm={12} md={6} lg={4} xl={3}> \n                                <ProjectLayout project={project} />\n                        </Col>\n                    ))}\n                </Row>\n            }\n        </div>\n    )\n}\n\n\nexport default ProjectsScreen","// import React, { useContext, useState } from 'react'\n// import { Form, Button } from 'react-bootstrap'\n// import axios from 'axios'\n// import { UserContext } from '../App'\n// import Message from '../components/Message'\n// import Loader from '../components/Loader'\n\n// const AdminScreen = () => {\n//   const { state } = useContext(UserContext)\n\n//   const [link, setLink] = useState()\n//   const [address, setAddress] = useState('')\n//   const [status, setStatus] = useState('')\n//   const [image, setImage] = useState('')\n//   const [isTop, setIsTop] = useState(false)\n//   const [uploading, setUploading] = useState(false)\n//   const [success, setSuccess] = useState(false)\n\n//   const uploadImageHandler = async (e) => {\n//     const file = e.target.files[0]\n//     const formData = new FormData()\n//     formData.append('image', file)\n\n//     setUploading(true)\n\n//     try {\n//       const config = {\n//         headers: {\n//           'Content-Type': 'application/json'\n//         },\n//       }\n\n//       const { data } = await axios.post('/upload', formData, config)\n\n//       setImage(data)\n//       setUploading(false)\n//     } catch (err) {\n//       console.log(err)\n//       setUploading(false)\n//     }\n//   }\n\n//   const submitHandler = () => {\n//     fetch('/create', {\n//       method: 'post',\n//       headers: {\n//         'Content-Type': 'application/json',\n//         \"Authorization\": \"Bearer \" + localStorage.getItem(\"jwt\")\n//       },\n//       body: JSON.stringify({\n//         link,\n//         address,\n//         status,\n//         image,\n//         isTop,\n//       }),\n//     })\n//       .then((res) => res.json())\n//       .then((data) => {\n//         setSuccess(true)\n//       })\n//       .catch((err) => {\n//         console.log(err)\n//         setSuccess(false)\n//       })\n//   }\n\n//   return (\n//     <div style={{ height: '70vh' }}>\n//     <h2 className='text-center'>Admin Page</h2>\n//     <div style={{ display: 'flex', justifyContent: 'center' }}>\n//       {!state ? (\n//         <Message variant='primary'>Only Admin can access this Resource</Message>\n//       ) : (\n//         <>\n//         <Form onSubmit={submitHandler}>\n//           <Form.Group controlId='link'>\n//             <Form.Label>Link</Form.Label>\n//             <Form.Control\n//               type='link'\n//               placeholder='Enter link'\n//               value={link}\n//               onChange={(e) => setLink(e.target.value)}\n//             ></Form.Control>\n//           </Form.Group>\n\n//           <Form.Group controlId='address'>\n//             <Form.Label>Address</Form.Label>\n//             <Form.Control\n//               type='address'\n//               placeholder='Enter address'\n//               value={address}\n//               onChange={(e) => setAddress(e.target.value)}\n//             ></Form.Control>\n//           </Form.Group>\n\n//           <Form.Group controlId='status'>\n//             <Form.Label>Status</Form.Label>\n//             <Form.Control\n//               type='status'\n//               placeholder='Enter status'\n//               value={status}\n//               onChange={(e) => setStatus(e.target.value)}\n//             ></Form.Control>\n//           </Form.Group>\n//           <Form.Group controlId='image'>\n//           <Form.Label>Image</Form.Label>\n//               <Form.Control\n//                 type='text'\n//                 placeholder='Enter Image'\n//                 value={image}\n//                 onChange={(e) => setImage(e.target.file)}\n//               ></Form.Control>\n//         </Form.Group>\n//         <Form.File\n//             id='image_file'\n//             label='Choose Image'\n//             custom\n//             onChange={uploadImageHandler}\n//         >\n//           {uploading && <Loader />}\n//         </Form.File>\n//           <Form.Group controlId='istop'>\n//             <Form.Check\n//               type='checkbox'\n//               label='Top'\n//               checked={isTop}\n//               onChange={(e) => setIsTop(e.target.checked)}\n//             ></Form.Check>\n//           </Form.Group>\n//           <Button className='btn btn-block' type='submit' variant='primary'>\n//             Add\n//           </Button>\n//         </Form>\n//         {success && <Message variant='success'>Project Added Successfully..!!!</Message>}\n//       </>\n//       )}\n//     </div>\n//     </div>\n//   )\n// }\n\n// export default AdminScreen\n\n\nimport React, { useContext, useState } from 'react'\nimport { Form, Button } from 'react-bootstrap'\nimport axios from 'axios'\nimport { UserContext } from '../App'\nimport Message from '../components/Message'\nimport Loader from '../components/Loader'\n\nconst AdminScreen = () => {\n  const { state } = useContext(UserContext)\n\n  const [link, setLink] = useState('')\n  const [address, setAddress] = useState('')\n  const [status, setStatus] = useState('')\n  const [order, setOrder] = useState('');\n  const [image, setImage] = useState('')\n  const [isTop, setIsTop] = useState(false)\n  const [uploading, setUploading] = useState(false)\n  const [success, setSuccess] = useState(false)\n\n  const submitHandler = async (e) => {\n    e.preventDefault();\n    setUploading(true);\n\n    try {\n      const formData = new FormData();\n      formData.append('image', image);\n\n      const uploadResponse = await axios.post('/upload', formData, {\n        headers: {\n          'Content-Type': 'multipart/form-data',\n        },\n      });\n\n      // console.log(uploadResponse.data.secure_url);\n\n      const projectResponse = await axios.post('/create', {\n        link,\n        address,\n        status,\n        order,\n        img: uploadResponse.data.secure_url,\n        top: isTop,\n      }, {\n        headers: {\n          'Content-Type': 'application/json',\n          Authorization: 'Bearer ' + localStorage.getItem('jwt'),\n        },\n      });\n\n      if (projectResponse.status === 200) {\n        setSuccess(true);\n        setLink('');\n        setAddress('');\n        setStatus('');\n        setOrder('');\n        setImage('');\n        setIsTop(false);\n      } else {\n        // setError('Error creating project');\n        console.log('Error creating project')\n      }\n    } catch (err) {\n      console.log(err);\n      // setError('Error uploading image');\n      console.log('Error uploading image')\n    } finally {\n      setUploading(false);\n    }\n  };\n\n  // const uploadImageHandler = async (e) => {\n  //   const file = e.target.files[0]\n  //   const formData = new FormData()\n  //   formData.append('image', file)\n\n  //   setUploading(true)\n\n  //   try {\n  //     const { data } = await axios.post('/upload', formData)\n\n  //     setImage(data.secure_url)\n  //     setUploading(false)\n  //   } catch (err) {\n  //     console.log(err)\n  //     setUploading(false)\n  //   }\n  // }\n\n  // const submitHandler = () => {\n  //   axios.post('/create', {\n  //     link,\n  //     address,\n  //     status,\n  //     img: image, // Sending image URL instead of file\n  //     top: isTop,\n  //   }, {\n  //     headers: {\n  //       'Content-Type': 'application/json',\n  //       Authorization: 'Bearer ' + localStorage.getItem('jwt')\n  //     }\n  //   })\n  //     .then(() => {\n  //       setSuccess(true)\n  //       // Clear form fields\n  //       setLink('')\n  //       setAddress('')\n  //       setStatus('')\n  //       setImage('')\n  //       setIsTop(false)\n  //     })\n  //     .catch((err) => {\n  //       console.log(err)\n  //       setSuccess(false)\n  //     })\n  // }\n\n  return (\n    <div style={{ height: '70vh' }}>\n      <h2 className='text-center'>Admin Page</h2>\n      <div style={{ display: 'flex', justifyContent: 'center' }}>\n        {!state ? (\n          <Message variant='primary'>Only Admin can access this Resource</Message>\n        ) : (\n          <>\n            <Form onSubmit={submitHandler}>\n              <Form.Group controlId='link'>\n                <Form.Label>Link</Form.Label>\n                <Form.Control\n                  type='link'\n                  placeholder='Enter link'\n                  value={link}\n                  onChange={(e) => setLink(e.target.value)}\n                ></Form.Control>\n              </Form.Group>\n\n              <Form.Group controlId='address'>\n                <Form.Label>Address</Form.Label>\n                <Form.Control\n                  type='address'\n                  placeholder='Enter address'\n                  value={address}\n                  onChange={(e) => setAddress(e.target.value)}\n                ></Form.Control>\n              </Form.Group>\n\n              <Form.Group controlId='status'>\n                <Form.Label>Status</Form.Label>\n                <Form.Control\n                  type='status'\n                  placeholder='Enter status'\n                  value={status}\n                  onChange={(e) => setStatus(e.target.value)}\n                ></Form.Control>\n              </Form.Group>\n\n              <Form.Group controlId='order'>\n                <Form.Label>Order</Form.Label>\n                <Form.Control\n                  type='order'\n                  placeholder='Enter order'\n                  value={order}\n                  onChange={(e) => setOrder(e.target.value)}\n                ></Form.Control>\n              </Form.Group>\n\n              {/* <Form.Group controlId='image'>\n                <Form.Label>Image</Form.Label>\n                <Form.File\n                  id='image_file'\n                  label='Choose Image'\n                  custom\n                  onChange={uploadImageHandler}\n                />\n                {uploading && <Loader />}\n              </Form.Group> */}\n\n              <Form.Group controlId='image'>\n                <Form.Label>Image</Form.Label>\n                <Form.File\n                  id='image_file'\n                  label='Choose Image'\n                  custom\n                  onChange={(e) => setImage(e.target.files[0])}\n                />\n                {uploading && <Loader />}\n              </Form.Group>\n\n              <Form.Group controlId='istop'>\n                <Form.Check\n                  type='checkbox'\n                  label='Top'\n                  checked={isTop}\n                  onChange={(e) => setIsTop(e.target.checked)}\n                ></Form.Check>\n              </Form.Group>\n\n              <Button className='btn btn-block' type='submit' variant='primary'>\n                Add\n              </Button>\n            </Form>\n            {success && <Message variant='success'>Project Added Successfully..!!!</Message>}\n          </>\n        )}\n      </div>\n    </div>\n  )\n}\n\nexport default AdminScreen","import React, { useState, useEffect, useContext } from 'react'\nimport { UserContext } from '../App'\nimport { useHistory } from \"react-router-dom\"\nimport { Button, InputGroup, FormControl } from 'react-bootstrap'\nimport Message from '../components/Message'\n\nconst LoginScreen = () => {\n    const { state, dispatch } = useContext(UserContext);\n\n    const history = useHistory();\n    const [email, setEmail] = useState(\"\");\n    const [password, setPassword] = useState(\"\");\n    const [error, setError] = useState(false);\n\n    useEffect(() => {\n      if (state) {\n        history.push('/')\n      }\n    }, [state, history])\n\n\n    const postData = () => {\n        fetch(\"/signin\", {\n            method: \"post\",\n            headers: {\n                \"Content-Type\": \"application/json\"\n            },\n            body: JSON.stringify({\n                email,\n                password\n            })\n        })\n        .then(res => res.json())\n        .then(data => {\n                if(data.error) {\n                    console.log(data.error)\n                } else {\n                    if(data.user && data.token !== undefined) {\n                      localStorage.setItem(\"user\", JSON.stringify(data.user));\n                      localStorage.setItem(\"jwt\", data.token);\n                      history.push(\"/admin\")\n                      dispatch({ type: \"USER\", payload: data.user })\n                    } else {\n                      setError(true)\n                    }\n                }\n        })\n        .catch(err => console.log(err));\n    }\n\n  return (\n    <div style={{ display: 'flex', justifyContent: 'center', height: '70vh' }}>\n      <div style={{ width: '30%' }}>\n          {\n            error && <Message variant='danger'>Login Failed...</Message> \n          }\n      <h1>Sign In</h1>\n          <span>Email</span>\n          <InputGroup className=\"mb-3\">\n                <FormControl\n                type='text'\n                aria-label=\"Default\"\n                aria-describedby=\"inputGroup-sizing-default\"\n                value={email} onChange={(e) => setEmail(e.target.value)}\n                />\n          </InputGroup>\n            <span>Password</span>\n            <InputGroup className=\"mb-3\">\n                <FormControl\n                type='password'\n                aria-label=\"Default\"\n                aria-describedby=\"inputGroup-sizing-default\"\n                value={password} \n                onChange={(e) => setPassword(e.target.value)}\n                />\n          </InputGroup>\n            <Button onClick={() => postData()} type=\"submit\">Sign In</Button>\n      </div>\n    </div>\n  )\n}\n\nexport default LoginScreen\n","export default __webpack_public_path__ + \"static/media/ghi_icon.ba1ff313.png\";","// import React, { useContext } from 'react'\n// import { Navbar, Nav, Container, Button } from 'react-bootstrap'\n// import { LinkContainer } from 'react-router-bootstrap'\n// import { useHistory } from \"react-router-dom\"\n// import { UserContext } from '../App'\n\n\n// const Header = () => {\n//     const { state, dispatch } = useContext(UserContext);\n//     const history = useHistory();\n    \n//     return (\n//         <header>\n//             <Navbar bg=\"primary\" variant='dark' expand=\"lg\">\n//                 <Container>\n//                 <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n//                 <Navbar.Brand href=\"/\">Grand Home Investments</Navbar.Brand>\n//                 <Navbar.Collapse id=\"basic-navbar-nav\">\n//                     <Nav className=\"ml-left\">\n//                     <LinkContainer to='/projects'>\n//                         <Nav.Link >All Projects</Nav.Link>\n//                     </LinkContainer>\n//                     <LinkContainer to='/#'>\n//                         <Nav.Link >About Us</Nav.Link>\n//                     </LinkContainer>\n//                     <LinkContainer to='/#'>\n//                         <Nav.Link >Contact Us</Nav.Link>\n//                     </LinkContainer>\n//                     {\n//                         state && (\n//                             <Button variant='primary'\n//                             onClick={\n//                                 () => {\n//                                     localStorage.clear()\n//                                     dispatch({ type: \"CLEAR\" })\n//                                     history.push(\"/login\")\n//                                     }\n//                                 }\n//                             >\n//                             Logout\n//                             </Button>\n//                         )\n//                     }\n//                     </Nav>\n//                 </Navbar.Collapse>\n//                 </Container>\n//             </Navbar>\n//         </header>\n//     )\n// }\n\n// export default Header\n\n// import React, { useContext } from 'react'\n// import { Navbar, Nav, Container, Button } from 'react-bootstrap'\n// import { LinkContainer } from 'react-router-bootstrap'\n// import { useHistory } from \"react-router-dom\"\n// import { UserContext } from '../App'\n\n// const Header = () => {\n//     const { state, dispatch } = useContext(UserContext);\n//     const history = useHistory();\n    \n//     // Custom style for the Container\n//     const containerStyle = {\n//         maxWidth: 'none', // To ensure the Container is full width\n//         padding: 0, // Removes padding from the Container\n//     };\n\n//     return (\n//         <header>\n//             <Navbar bg=\"primary\" variant='dark' expand=\"lg\">\n//                 <Container style={containerStyle}>\n//                     <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n//                     <Navbar.Brand href=\"/\">Grand Home Investments</Navbar.Brand>\n//                     <Navbar.Collapse id=\"basic-navbar-nav\">\n//                         <Nav className=\"ml-left\">\n//                             <LinkContainer to='/projects'>\n//                                 <Nav.Link>All Projects</Nav.Link>\n//                             </LinkContainer>\n//                             <LinkContainer to='/#'>\n//                                 <Nav.Link>About Us</Nav.Link>\n//                             </LinkContainer>\n//                             <LinkContainer to='/#'>\n//                                 <Nav.Link>Contact Us</Nav.Link>\n//                             </LinkContainer>\n//                             {\n//                                 state && (\n//                                     <Button variant='primary'\n//                                         onClick={\n//                                             () => {\n//                                                 localStorage.clear()\n//                                                 dispatch({ type: \"CLEAR\" })\n//                                                 history.push(\"/login\")\n//                                             }\n//                                         }\n//                                     >\n//                                         Logout\n//                                     </Button>\n//                                 )\n//                             }\n//                         </Nav>\n//                     </Navbar.Collapse>\n//                 </Container>\n//             </Navbar>\n//         </header>\n//     )\n// }\n\n// export default Header;\n\nimport React, { useContext } from 'react';\nimport { Navbar, Nav, Container, Button } from 'react-bootstrap';\nimport { LinkContainer } from 'react-router-bootstrap';\nimport { useHistory } from \"react-router-dom\";\nimport { UserContext } from '../App';\nimport ghiIcon from '../images/ghi_icon.png';\n\nconst Header = () => {\n    const { state, dispatch } = useContext(UserContext);\n    const history = useHistory();\n\n    const scrollToFooter = () => {\n        const footer = document.getElementById('footer'); // Assuming your footer has an id of 'footer'\n        footer.scrollIntoView({ behavior: 'smooth' });\n    };\n\n    return (\n        <header>\n            <Navbar bg=\"primary\" variant='dark' expand=\"lg\">\n                <Container style={{ maxWidth: 'none', padding: 0 }}>\n                    {/* <Navbar.Brand style={{ margin: '0rem 3.3rem', fontWeight: 'bold' }} href=\"/\">GRAND HOME INVESTMENTS</Navbar.Brand> */}\n                    <Navbar.Brand href=\"/\" style={{ margin: '0rem 4rem'}}>\n                        <img style={{ width: '75px', height: '70px' }} src={ghiIcon} alt=\"\" />\n                    </Navbar.Brand>\n                    <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n                    <Navbar.Collapse id=\"basic-navbar-nav\">\n                        <Nav className=\"ml-auto nav-items\"> {/* ml-auto to push the Nav to the right */}\n                            <LinkContainer style={{ fontSize: '27px', fontFamily: 'math' }} to='/projects'>\n                                <Nav.Link style={{ cursor: 'pointer' }}>Project Gallery</Nav.Link>\n                                {/* <Nav.Link style={{ cursor: 'pointer' }}>PROJECT GALLERY</Nav.Link> */}\n                            </LinkContainer>\n                            {/* <LinkContainer to=''> */}\n                                <Nav.Link style={{ fontFamily: 'math', fontSize: '27px', cursor: 'pointer' }} onClick={scrollToFooter}>Contact Us</Nav.Link>\n                                {/* <Nav.Link style={{ fontSize: '27px', marginLeft: '1rem', cursor: 'pointer' }} onClick={scrollToFooter}>CONTACT US</Nav.Link> */}\n                            {/* </LinkContainer> */}\n                            {state && (\n                                <Button variant='primary' onClick={() => {\n                                    localStorage.clear();\n                                    dispatch({ type: \"CLEAR\" });\n                                    history.push(\"/login\");\n                                }}>\n                                    Logout\n                                </Button>\n                            )}\n                        </Nav>\n                    </Navbar.Collapse>\n                </Container>\n            </Navbar>\n        </header>\n    );\n}\n\nexport default Header;","export const initialState = null\n\nexport const reducer = (state, action) => {\n    if(action.type === \"USER\") {\n        return action.payload\n    } \n\n    if(action.type === \"CLEAR\") {\n        return null;\n    }\n\n    return state;\n}","import React from 'react'\nimport { Col, Container, Row } from 'react-bootstrap'\n\nconst Footer = () => {\n    return (\n        <footer id='footer'>\n                <Row className='text-center'>\n                    <Container className='primary'>\n                        <h5>Contact Info</h5>\n                        <p><strong>Email: </strong>grandhomeinvestments@gmail.com</p>\n                        <p style={{ fontSize: '24px' }}><strong>Phone: </strong>(732) 233-4744</p>\n                        <p><strong>Privacy Policy: </strong>No mobile information will be shared with third parties/affiliates for\nmarketing/promotional purposes. All other categories exclude text messaging originator\nopt-in data and consent; this information will not be shared with any third parties</p>\n                        <Col>Copyright &copy; Grand Home Investments</Col>\n                    </Container>\n                </Row> \n        </footer>\n    )\n}\n\n\nexport default Footer;","import React from 'react';\n\nconst InvestorForm = ({ onSubmit, onReset, formData, setFormData }) => {\n  const {\n    investor_name,\n    first_name,\n    middle_name,\n    last_name,\n    email1,\n    email2,\n    phone_number,\n    is_llc,\n    company_name,\n    address1,\n    address2,\n    city,\n    state,\n    zip,\n    country,\n  } = formData || {};\n\n  const handleChange = (field, value) => {\n    setFormData((prevData) => ({ ...prevData, [field]: value }));\n  };\n\n  return (\n    <div>\n      <h2>Add Investor</h2>\n      <div className='form-align'>\n        <form onSubmit={onSubmit}>\n          <div className='two_in_row'>\n            <label>\n              Investor Name:\n              <input\n                type=\"text\"\n                value={investor_name ?? ''}\n                onChange={(e) => handleChange('investor_name', e.target.value)}\n              />\n            </label>\n            <label>\n              First Name:\n              <input\n                type=\"text\"\n                value={first_name ?? ''}\n                onChange={(e) => handleChange('first_name', e.target.value)}\n              />\n            </label>\n            <label>\n              Middle Name:\n              <input\n                type=\"text\"\n                value={middle_name ?? ''}\n                onChange={(e) => handleChange('middle_name', e.target.value)}\n              />\n            </label>\n            <label>\n              Last Name:\n              <input\n                type=\"text\"\n                value={last_name ?? ''}\n                onChange={(e) => handleChange('last_name', e.target.value)}\n              />\n            </label>\n          </div>\n          <div className='two_in_row'>\n            <label>\n              Email 1:\n              <input\n                type=\"email\"\n                value={email1 ?? ''}\n                onChange={(e) => handleChange('email1', e.target.value)}\n              />\n            </label>\n            <label>\n              Email 2:\n              <input\n                type=\"email\"\n                value={email2 ?? ''}\n                onChange={(e) => handleChange('email2', e.target.value)}\n              />\n            </label>\n            </div>\n          <div className='two_in_row'>\n            <label>\n              Phone Number:\n              <input\n                type=\"tel\"\n                value={phone_number ?? ''}\n                onChange={(e) => handleChange('phone_number', e.target.value)}\n                />\n            </label>\n            <label style={{ display: 'flex' }}>\n              <p>Is LLC:</p>\n              <input\n                type=\"checkbox\"\n                checked={is_llc ?? false}\n                onChange={(e) => handleChange('is_llc', e.target.checked)}\n                />\n            </label>\n            <label>\n              Company Name:\n              <input\n                type=\"text\"\n                value={company_name ?? ''}\n                onChange={(e) => handleChange('company_name', e.target.value)}\n                />\n            </label>\n          </div>\n          <div className='two_in_row'>\n            <label>\n              Address 1:\n              <input\n                type=\"text\"\n                value={address1 ?? ''}\n                onChange={(e) => handleChange('address1', e.target.value)}\n              />\n            </label>\n            <label>\n              Address 2:\n              <input\n                type=\"text\"\n                value={address2 ?? ''}\n                onChange={(e) => handleChange('address2', e.target.value)}\n              />\n            </label>\n            </div>\n          <div className='two_in_row'>\n            <label>\n              City:\n              <input\n                type=\"text\"\n                value={city ?? ''}\n                onChange={(e) => handleChange('city', e.target.value)}\n              />\n            </label>\n            <label>\n              State:\n              <input\n                type=\"text\"\n                value={state ?? ''}\n                onChange={(e) => handleChange('state', e.target.value)}\n              />\n            </label>\n            </div>\n          <div className='two_in_row'>\n            <label>\n              Zip:\n              <input\n                type=\"text\"\n                value={zip ?? ''}\n                onChange={(e) => handleChange('zip', e.target.value)}\n              />\n            </label>\n            <label>\n              Country:\n              <input\n                type=\"text\"\n                value={country ?? ''}\n                onChange={(e) => handleChange('country', e.target.value)}\n              />\n            </label>\n            </div>\n            <button type=\"submit\">Add Investor</button>\n            {/* <button type=\"button\" onClick={onReset}>Reset</button> */}\n          </form>\n      </div>\n    </div>\n  );\n};\n\nexport default InvestorForm;","import React from 'react';\n\nconst PropertyForm = ({ onSubmit, onReset, formData, setFormData }) => {\n  const {\n    address,\n    city,\n    zip,\n    country,\n    buy_date,\n    sell_date,\n    llc_name,\n    total_investment,\n  } = formData || {};\n  \n  const handleChange = (field, value) => {\n    setFormData((prevData) => ({ ...prevData, [field]: value }));\n  };\n\n  return (\n    <div>\n      <h2>Add Property</h2>\n      <div className='form-align'>\n      <form onSubmit={onSubmit}>\n      <div className='two_in_row'>\n        <label>\n          Address:\n          <input\n            type=\"text\"\n            value={address ?? ''}\n            onChange={(e) => handleChange('address', e.target.value)}\n          />\n        </label>\n        <label>\n          City:\n          <input\n            type=\"text\"\n            value={city ?? ''}\n            onChange={(e) => handleChange('city', e.target.value)}\n          />\n        </label>\n        <label>\n          Zip:\n          <input\n            type=\"text\"\n            value={zip ?? ''}\n            onChange={(e) => handleChange('zip', e.target.value)}\n          />\n        </label>\n        <label>\n          Country:\n          <input\n            type=\"text\"\n            value={country ?? ''}\n            onChange={(e) => handleChange('country', e.target.value)}\n            />\n        </label>\n        </div>\n      <div className='two_in_row'>\n        <label>\n          Buy Date:\n          <input\n            type=\"date\"\n            value={buy_date ?? ''}\n            onChange={(e) => handleChange('buy_date', e.target.value)}\n          />\n        </label>\n        <label>\n          Sell Date:\n          <input\n            type=\"date\"\n            value={sell_date ?? ''}\n            onChange={(e) => handleChange('sell_date', e.target.value)}\n          />\n        </label>\n        </div>\n        <label>\n          LLC Name:\n          <input\n            type=\"text\"\n            value={llc_name ?? ''}\n            onChange={(e) => handleChange('llc_name', e.target.value)}\n          />\n        </label>\n        <label>\n          Total Investment:\n          <input\n            type=\"number\"\n            value={total_investment ?? 0}\n            onChange={(e) => handleChange('total_investment', e.target.value)}\n          />\n        </label>\n        <button type=\"submit\">Add Property</button>\n        {/* <button type=\"button\" onClick={onReset}>Reset</button> */}\n      </form>\n      </div>\n    </div>\n  );\n};\n\nexport default PropertyForm;","import React from 'react';\n\nconst InvestmentForm = ({ onSubmit, onReset, formData, setFormData, investors, properties }) => {\n  const {\n    investor_id,\n    property_id,\n    principle,\n    profit,\n  } = formData || {};\n\n  console.log(investors);\n\n  const handleChange = (field, value) => {\n    setFormData((prevData) => ({ ...prevData, [field]: value }));\n  };\n\n  return (\n    <div>\n      <h2>Add Investment</h2>\n      <div className='form-align'> \n        <form onSubmit={onSubmit}>\n          <label>\n            Investor ID:\n              <select value={investor_id ?? ''} onChange={(e) => handleChange('investor_id', e.target.value)}>\n                <option value=\"\">Select Investor</option>\n                {investors ? investors.map((investor) => (\n                  <option key={investor.investor_id} value={investor.investor_id}>\n                    {investor.investor_name}\n                  </option>\n                )) : null}\n              </select>\n          </label>\n          <label>\n            Property ID:\n              <select value={property_id ?? ''} onChange={(e) => handleChange('property_id', e.target.value)}>\n                <option value=\"\">Select Property</option>\n                {properties ? properties.map((property) => (\n                  <option key={property.property_id} value={property.property_id}>\n                    {property.address}\n                  </option>\n                )) : null}\n              </select>\n          </label>\n          <label>\n            Principle:\n            <input\n              type=\"number\"\n              value={principle ?? ''}\n              onChange={(e) => handleChange('principle', e.target.value)}\n            />\n          </label>\n          <label>\n            Profit:\n            <input\n              type=\"number\"\n              value={profit ?? ''}\n              onChange={(e) => handleChange('profit', e.target.value)}\n            />\n          </label>\n          <button type=\"submit\">Add Investment</button>\n          {/* <button type=\"button\" onClick={onReset}>Reset</button> */}\n        </form>\n      </div>\n    </div>\n  );\n};\n\nexport default InvestmentForm;","// import React from 'react';\n\n// const TransactionForm = ({ onSubmit, onReset, formData, setFormData, investments, properties }) => {\n//   const {\n//     investment_id,\n//     from_property_id,\n//     amount,\n//     transaction_type,\n//     transaction_date,\n//     is_combined_rollover,\n//     method_of_payment,\n//   } = formData || {};\n\n//   const handleChange = (field, value) => {\n//     setFormData((prevData) => ({ ...prevData, [field]: value }));\n//   };\n\n//   return (\n//     <div>\n//       <h2>Add Transaction</h2>\n//       <div className='form-align'>\n//       <form onSubmit={onSubmit}>\n//         <label>\n//           Investment ID:\n//             <select value={investment_id ?? ''} onChange={(e) => handleChange('investment_id', e.target.value)}>\n//               <option value=\"\">Select Property</option>\n//               {investments ? investments.map((investment) => (\n//                 <option key={investment.investment_id} value={investment.investment_id}>\n//                   {investment.Investor.investor_name} | {investment.Property.address} | Principle: {investment.principle} | Profit: {investment.profit}\n//                 </option>\n//               )) : null}\n//             </select>\n//         </label>\n//         <label>\n//           From Property ID:\n//            <select value={from_property_id ?? ''} onChange={(e) => handleChange('from_property_id', e.target.value)}>\n//               <option value=\"\">Select Property</option>\n//               {properties ? properties.map((property) => (\n//                 <option key={property.property_id} value={property.property_id}>\n//                   {property.address}\n//                 </option>\n//               )) : null}\n//             </select>\n//         </label>\n//         <label>\n//           Amount:\n//           <input\n//             type=\"number\"\n//             value={amount ?? ''}\n//             onChange={(e) => handleChange('amount', e.target.value)}\n//           />\n//         </label>\n//         <label>\n//           Transaction Type:\n//           <select\n//             value={transaction_type ?? ''}\n//             onChange={(e) => handleChange('transaction_type', e.target.value)}\n//           >\n//             <option value=\"\">Select Transaction Type</option>\n//             <option value=\"Rollover\">Rollover</option>\n//             <option value=\"Return of Investment\">Return of Investment</option>\n//             <option value=\"New Investment\">New Investment</option>\n//           </select>\n//         </label>\n//         <label>\n//           Transaction Date:\n//           <input\n//             type=\"date\"\n//             value={transaction_date ?? ''}\n//             onChange={(e) => handleChange('transaction_date', e.target.value)}\n//           />\n//         </label>\n//         <label>\n//           Method of Payment:\n//           <select\n//             value={method_of_payment ?? ''}\n//             onChange={(e) => handleChange('method_of_payment', e.target.value)}>\n//             <option value=\"\">Select Method of Payment</option>\n//             <option value=\"ACH\">ACH</option>\n//             <option value=\"WIRE\">WIRE</option>\n//             <option value=\"CHECK\">CHECK</option>\n//           </select>\n//         </label>\n//         <button type=\"submit\">Add Transaction</button>\n//         {/* <button type=\"button\" onClick={onReset}>Reset</button> */}\n//       </form>\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default TransactionForm;\n\n\n// // ach, wire, check\n\nimport React from 'react';\n\nconst TransactionForm = ({ onSubmit, onReset, formData, setFormData, investments, properties }) => {\n  const {\n    investment_id,\n    from_property_id,\n    to_property_id, // Add this field\n    amount,\n    transaction_type,\n    transaction_date,\n    method_of_payment,\n  } = formData || {};\n\n  const handleChange = (field, value) => {\n    setFormData((prevData) => ({ ...prevData, [field]: value }));\n  };\n\n  return (\n    <div>\n      <h2>Add Transaction</h2>\n      <div className='form-align'>\n      <form onSubmit={onSubmit}>\n        <label>\n          Investment ID:\n          <select value={investment_id ?? ''} onChange={(e) => handleChange('investment_id', e.target.value)}>\n            <option value=\"\">Select Investment</option>\n            {investments ? investments.map((investment) => (\n              <option key={investment.investment_id} value={investment.investment_id}>\n                {investment.Investor.investor_name} | {investment.Property.address} | Principle: {investment.principle} | Profit: {investment.profit}\n              </option>\n            )) : null}\n          </select>\n        </label>\n        <label>\n          From Property ID:\n          <select value={from_property_id ?? ''} onChange={(e) => handleChange('from_property_id', e.target.value)}>\n            <option value=\"\">Select Property</option>\n            {properties ? properties.map((property) => (\n              <option key={property.property_id} value={property.property_id}>\n                {property.address}\n              </option>\n            )) : null}\n          </select>\n        </label>\n        <label>\n          To Property ID: {/* Add this label */}\n          <select value={to_property_id ?? ''} onChange={(e) => handleChange('to_property_id', e.target.value)}>\n            <option value=\"\">Select Property</option>\n            {properties ? properties.map((property) => (\n              <option key={property.property_id} value={property.property_id}>\n                {property.address}\n              </option>\n            )) : null}\n          </select>\n        </label>\n        <label>\n          Amount:\n          <input\n            type=\"number\"\n            value={amount ?? ''}\n            onChange={(e) => handleChange('amount', e.target.value)}\n          />\n        </label>\n        <label>\n          Transaction Type:\n          <select\n            value={transaction_type ?? ''}\n            onChange={(e) => handleChange('transaction_type', e.target.value)}\n          >\n            <option value=\"\">Select Transaction Type</option>\n            <option value=\"Rollover\">Rollover</option>\n            <option value=\"Return of Investment\">Return of Investment</option>\n            <option value=\"New Investment\">New Investment</option>\n            <option value=\"Return of Profit\">Return of Profit</option> {/* Add this option */}\n          </select>\n        </label>\n        <label>\n          Transaction Date:\n          <input\n            type=\"date\"\n            value={transaction_date ?? ''}\n            onChange={(e) => handleChange('transaction_date', e.target.value)}\n          />\n        </label>\n        <label>\n          Method of Payment:\n          <select\n            value={method_of_payment ?? ''}\n            onChange={(e) => handleChange('method_of_payment', e.target.value)}>\n            <option value=\"\">Select Method of Payment</option>\n            <option value=\"ACH\">ACH</option>\n            <option value=\"WIRE\">WIRE</option>\n            <option value=\"CHECK\">CHECK</option>\n          </select>\n        </label>\n        <button type=\"submit\">Add Transaction</button>\n      </form>\n      </div>\n    </div>\n  );\n};\n\nexport default TransactionForm;","// import React from 'react';\n\n// const InvestmentTable = ({ investments }) => {\n//   return (\n//     <table>\n//       <thead>\n//         <tr>\n//           <th>Investment ID</th>\n//           <th>Principle</th>\n//           <th>Profit</th>\n//           <th>Property Name</th>\n//         </tr>\n//       </thead>\n//       <tbody>\n//         {investments.map((investment) => (\n//           <InvestmentRow key={investment.investment_id} investment={investment} />\n//         ))}\n//       </tbody>\n//     </table>\n//   );\n// };\n\n// const InvestmentRow = ({ investment }) => {\n//   return (\n//     <tr>\n//       <td>{investment.investment_id}</td>\n//       <td>{investment['investment principle']}</td>\n//       <td>{investment['investment profit']}</td>\n//       <td>{investment.property_name}</td>\n//     </tr>\n//   );\n// };\n\n// const TransactionTable = ({ transactions }) => {\n//   return (\n//     <table>\n//       <thead>\n//         <tr>\n//           <th>Transaction ID</th>\n//           <th>Amount</th>\n//           <th>Combined Rollover</th>\n//           <th>From Property Name</th>\n//           <th>Transaction Type</th>\n//           <th>Transaction Date</th>\n//         </tr>\n//       </thead>\n//       <tbody>\n//         {transactions.map((transaction) => (\n//           <TransactionRow key={transaction.transaction_id} transaction={transaction} />\n//         ))}\n//       </tbody>\n//     </table>\n//   );\n// };\n\n// const TransactionRow = ({ transaction }) => {\n//   return (\n//     <tr>\n//       <td>{transaction.transaction_id}</td>\n//       <td>{transaction.amount}</td>\n//       <td>{transaction.is_Combined_rollover}</td>\n//       <td>{transaction.from_property_name}</td>\n//       <td>{transaction.transaction_type}</td>\n//       <td>{transaction.transaction_date}</td>\n//     </tr>\n//   );\n// };\n\n// export { InvestmentTable, TransactionTable };\n\n// import React from 'react';\n// import './TableStyles.css'; // Import your CSS file\n\n// const InvestmentTable = ({ investments }) => {\n//   console.log(investments);\n//   return (\n//     <table className=\"styled-table\">\n//       <thead>\n//         <tr>\n//           <th>Investment ID</th>\n//           <th>Principle</th>\n//           <th>Profit</th>\n//           <th>Property Name</th>\n//         </tr>\n//       </thead>\n//       <tbody>\n//         {investments.map((investment) => (\n//           <InvestmentRow key={investment.investment_id} investment={investment} />\n//         ))}\n//       </tbody>\n//     </table>\n//   );\n// };\n\n// const InvestmentRow = ({ investment }) => {\n//   return (\n//     <tr>\n//       <td>{investment.investment_id}</td>\n//       <td>{investment.principle}</td>\n//       <td>{investment.profit}</td>\n//       <td>{investment.Property.address}</td>\n//     </tr>\n//   );\n// };\n\n// const TransactionTable = ({ transactions }) => {\n//   console.log(transactions);\n//   return (\n//     <table className=\"styled-table\">\n//       <thead>\n//         <tr>\n//           <th>Transaction ID</th>\n//           <th>Amount</th>\n//           {/* <th>Combined Rollover</th> */}\n//           <th>Profit or Principle</th>\n//           <th>From Property Name</th>\n//           <th>Transaction Type</th>\n//           <th>Transaction Date</th>\n//           <th>Method of Payment</th>\n//         </tr>\n//       </thead>\n//       <tbody>\n//         {/* {transactions.map((transaction) => (\n//           <TransactionRow key={transaction.transaction_id} transaction={transaction} />\n//         ))} */}\n//         {transactions.map((transactionArray, index) => (\n//           /* Iterate over each transaction within the array */\n//           transactionArray.map(transaction => (\n//             <TransactionRow key={index + '-' + transaction.transaction_id} transaction={transaction} />\n//           ))\n//         ))}\n//       </tbody>\n//     </table>\n//   );\n// };\n\n// const TransactionRow = ({ transaction }) => {\n//   return (\n//     <tr>\n//       <td>{transaction.transaction_id}</td>\n//       <td>{transaction.amount}</td>\n//       {/* <td>{transaction.is_Combined_rollover}</td> */}\n//       <td>{transaction.principle_or_profit}</td>\n//       <td>{transaction.Property.address}</td>\n//       <td>{transaction.transaction_type}</td>\n//       <td>{transaction.transaction_date}</td>\n//       <td>{transaction.method_of_payment}</td>\n//     </tr>\n//   );\n// };\n\n// export { InvestmentTable, TransactionTable };\n\nimport React from 'react';\nimport './TableStyles.css'; // Import your CSS file\n\nconst InvestmentTable = ({ investments }) => {\n  console.log(investments);\n  return (\n    <table className=\"styled-table\">\n      <thead>\n        <tr>\n          <th>Investment ID</th>\n          <th>Principle</th>\n          <th>Profit</th>\n          <th>Property Name</th>\n        </tr>\n      </thead>\n      <tbody>\n        {investments.map((investment) => (\n          <InvestmentRow key={investment.investment_id} investment={investment} />\n        ))}\n      </tbody>\n    </table>\n  );\n};\n\nconst InvestmentRow = ({ investment }) => {\n  return (\n    <tr>\n      <td>{investment.investment_id}</td>\n      <td>{investment.principle}</td>\n      <td>{investment.profit}</td>\n      <td>{investment.Property.address}</td>\n    </tr>\n  );\n};\n\nconst TransactionTable = ({ transactions }) => {\n  console.log(transactions);\n  return (\n    <table className=\"styled-table\">\n      <thead>\n        <tr>\n          <th>Transaction ID</th>\n          <th>Amount</th>\n          <th>Profit or Principle</th>\n          <th>From Property Name</th>\n          <th>To Property Name</th>\n          <th>Transaction Type</th>\n          <th>Transaction Date</th>\n          <th>Method of Payment</th>\n        </tr>\n      </thead>\n      <tbody>\n        {transactions.map((transactionArray, index) => (\n          transactionArray.map(transaction => (\n            <TransactionRow key={index + '-' + transaction.transaction_id} transaction={transaction} />\n          ))\n        ))}\n      </tbody>\n    </table>\n  );\n};\n\nconst TransactionRow = ({ transaction }) => {\n  return (\n    <tr>\n      <td>{transaction.transaction_id}</td>\n      <td>{transaction.amount}</td>\n      <td>{transaction.principle_or_profit}</td>\n      <td>{transaction.from_property ? transaction.from_property.address : 'N/A'}</td>\n      <td>{transaction.to_property ? transaction.to_property.address : 'N/A'}</td> {/* Add this column */}\n      <td>{transaction.transaction_type}</td>\n      <td>{transaction.transaction_date}</td>\n      <td>{transaction.method_of_payment}</td>\n    </tr>\n  );\n};\n\nexport { InvestmentTable, TransactionTable };","// import React from 'react';\n// import { InvestmentTable, TransactionTable } from '../InvestmentTable/InvestmentTable';\n\n// const InvestorDataForm = ({ onSubmit, onReset, formData, setFormData, data }) => {\n//   const { investor_name } = formData || {};\n\n//   console.log(data ? data : null);\n\n//   const handleChange = (field, value) => {\n//     setFormData((prevData) => ({ ...prevData, [field]: value }));\n//   };\n\n//   return (\n//     <div>\n//       <h2>Get Investor Data</h2>\n//       <form onSubmit={onSubmit}>\n//         <div className='investor_data_form_div'>\n//             <label>\n//               Investor Name:\n//               {/* <input type=\"number\" value={investor_id} onChange={(e) => formData.investor_id = parseInt(e.target.value)} /> */}\n//               <input\n//                 type=\"text\"\n//                 value={investor_name ?? ''}\n//                 onChange={(e) => handleChange('investor_name', e.target.value)}\n//               />\n//             </label>\n//             <button type=\"submit\">Get Data</button>\n//         </div>\n//         {/* <button type=\"button\" onClick={onReset}>Reset</button> */}\n//       </form>\n//       {\n//         data ?\n//         <div className='investor_data_div'>\n//             <h1>{data.investor_name}</h1>\n//             <h2>Investments</h2>\n//             <InvestmentTable investments={data.Investments} />\n//             <h2>Transactions</h2>\n//             <TransactionTable transactions={data.Investments.map(investment => investment.Transactions)} />\n//         </div>\n//         : null\n//       }\n//     </div>\n//   );\n// };\n\n// export default InvestorDataForm;\n\n// import React from 'react';\n// import { InvestmentTable, TransactionTable } from '../InvestmentTable/InvestmentTable';\n\n// const InvestorDataForm = ({ onSubmit, onReset, formData, setFormData, data }) => {\n//   const { investor_name } = formData || {};\n\n//   console.log(data ? data : null);\n\n//   const handleChange = (field, value) => {\n//     setFormData((prevData) => ({ ...prevData, [field]: value }));\n//   };\n\n//   return (\n//     <div>\n//       <h2>Get Investor Data</h2>\n//       <form onSubmit={onSubmit}>\n//         <div className='investor_data_form_div'>\n//           <label>\n//             Investor Name:\n//             <input\n//               type=\"text\"\n//               value={investor_name ?? ''}\n//               onChange={(e) => handleChange('investor_name', e.target.value)}\n//             />\n//           </label>\n//           <button type=\"submit\">Get Data</button>\n//         </div>\n//       </form>\n//       {\n//         data ?\n//         <div className='investor_data_div'>\n//           <h1>{data.investor_name}</h1>\n//           <h2>Investments</h2>\n//           <InvestmentTable investments={data.Investments} />\n//           <h2>Transactions</h2>\n//           <TransactionTable transactions={data.Investments.map(investment => investment.Transactions)} />\n//         </div>\n//         : null\n//       }\n//     </div>\n//   );\n// };\n\n// export default InvestorDataForm;\n\n\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { InvestmentTable, TransactionTable } from '../InvestmentTable/InvestmentTable';\n\nconst InvestorDataForm = ({ onSubmit, onReset, formData, setFormData, data }) => {\n  const { investor_name } = formData || {};\n  const [investorOptions, setInvestorOptions] = useState([]);\n\n  const handleChange = (field, value) => {\n    setFormData((prevData) => ({ ...prevData, [field]: value }));\n  };\n\n  const fetchInvestorOptions = async (query) => {\n    if (query.length === 0) {\n      setInvestorOptions([]);\n      return;\n    }\n\n    try {\n      const response = await axios.get('/search_investors', {\n        params: { query }\n      });\n      setInvestorOptions(response.data);\n    } catch (error) {\n      console.error('Error fetching investor options:', error);\n    }\n  };\n\n  useEffect(() => {\n    fetchInvestorOptions(investor_name || '');\n  }, [investor_name]);\n\n  return (\n    <div>\n      <h2>Get Investor Data</h2>\n      <form onSubmit={onSubmit}>\n        <div className='investor_data_form_div'>\n          <label>\n            Investor Name:\n            <input\n              type=\"text\"\n              value={investor_name ?? ''}\n              onChange={(e) => handleChange('investor_name', e.target.value)}\n              list=\"investor-options\"\n            />\n            <datalist id=\"investor-options\">\n              {investorOptions.map((name, index) => (\n                <option key={index} value={name} />\n              ))}\n            </datalist>\n          </label>\n          <button type=\"submit\">Get Data</button>\n        </div>\n      </form>\n      {data ? (\n        <div className='investor_data_div'>\n          <h1>{data.investor_name}</h1>\n          <h2>Investments</h2>\n          <InvestmentTable investments={data.Investments} />\n          <h2>Transactions</h2>\n          <TransactionTable transactions={data.Investments.map(investment => investment.Transactions)} />\n        </div>\n      ) : null}\n    </div>\n  );\n};\n\nexport default InvestorDataForm;","import React, { useContext, useEffect, useState } from 'react';\nimport axios from 'axios';\nimport InvestorForm from '../dbcomponents/InvestorForm/InvestorForm';\nimport PropertyForm from '../dbcomponents/PropertyForm/PropertyForm';\nimport InvestmentForm from '../dbcomponents/InvestmentForm/InvestmentForm';\nimport TransactionForm from '../dbcomponents/TransactionForm/TransactionForm';\nimport InvestorDataForm from '../dbcomponents/InvestorDataForm/InvestorDataForm';\nimport '../dbcomponents/FormStyling.css';\nimport { UserContext } from '../App'\nimport Message from '../components/Message'\n\nfunction DBScreen() {\n  const { state } = useContext(UserContext)\n\n  const [formType, setFormType] = useState(null);\n  const [formData, setFormData] = useState(null);\n  const [data, setData] = useState(null);\n  const [error, setError] = useState(null);\n  const [investors, setInvestors] = useState(null);\n  console.log(investors)\n  const [properties, setProperties] = useState(null);\n  const [investments, setInvestments] = useState(null);\n  const [successMessage, setSuccessMessage] = useState('');\n  const [errorMessage, setErrorMessage] = useState('');\n  const [loader, setLoader] = useState('');\n  console.log(formData);\n\n\n  const resetFormFields = () => {\n    // Reset form fields based on the form type\n    if (formType === 'get_investor_data') {\n        setFormData({\n          investor_name: '',\n          // Other investor fields\n        });\n    }\n    if (formType === 'investor') {\n      setFormData({\n        investor_name: '',\n        // Other investor fields\n      });\n    } else if (formType === 'property') {\n      setFormData({\n        address: '',\n        // Other property fields\n      });\n    } else if (formType === 'investment') {\n      setFormData({\n        // Investment fields\n      });\n    } else if (formType === 'transaction') {\n      setFormData({\n        // Transaction fields\n      });\n    }\n  };\n\n  const handleFormSubmit = async (e) => {\n\n    // Check if formData is empty\n    if (!formData || Object.keys(formData).length === 0) {\n      setErrorMessage('Form data is empty');\n      setSuccessMessage('');\n      return;\n    }\n    try {\n      // Implement logic to handle form submission based on the form type\n      if (formType === 'get_investor_data') {\n          e.preventDefault();\n        try {\n        //   const response = await axios.get(`/get_investor_data/${formData.investor_name}`);\n          const response = await axios.get(`/get_investor_data/${formData.investor_name}`);\n          // const response = await axios.get('/get_investor_data', {\n          //   params: {\n          //     investor_name: formData.investor_name\n          //   }\n          // });\n          console.log(response.data);\n          setData(response.data);\n        } catch (getInvestorError) {\n          setErrorMessage(`Error adding investment: ${getInvestorError.message}`);\n        }\n      } else if (formType === 'investor') {\n        try {\n          const response = await axios.post('/add_investor', formData);\n          console.log('Investor added successfully:', response.data);\n          setSuccessMessage('Investor added successfully');\n        } catch (investorError) {\n          setErrorMessage(`Error adding investment: ${investorError.message}`);\n        }\n      } else if (formType === 'property') {\n        try {\n          const response = await axios.post('/add_property', formData);\n          console.log('Property added successfully:', response.data);\n          setSuccessMessage('Property added successfully');\n        } catch (PropertyError) {\n          setErrorMessage(`Error adding investment: ${PropertyError.message}`);\n        }\n      } else if (formType === 'investment') {\n        try {\n          const response = await axios.post('/add_investment', formData);\n          const getProperties = await axios.get('/get_properties');\n          setProperties(getProperties.data.investors_data);\n          console.log('Investment added successfully:', response.data);\n          setSuccessMessage('Investment added successfully');\n        } catch (investmentError) {\n          setErrorMessage(`Error adding investment: ${investmentError.message}`);\n        }\n      } else if (formType === 'transaction') {\n        try {\n          // Axios request to add a transaction\n          const response = await axios.post('/add_transaction', formData);\n          console.log('Transaction added successfully:', response.data);\n          setSuccessMessage('Transaction added successfully');\n        } catch (transactionError) {\n          setErrorMessage(`Error adding investment: ${transactionError.message}`);\n        }\n      }\n  \n      // Reset form fields and error after successful submission\n      resetFormFields();\n      setError(null);\n    } catch (error) {\n      setError(error.message || 'An error occurred');\n    }\n  };  \n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const investorResponse = await axios.get('/get_investors');\n        const propertyResponse = await axios.get('/get_properties');\n        const investmentResponse = await axios.get('/get_investments');\n        // console.log('Response Status:', response.status);\n        // console.log('Response Data:', response.data);\n        setInvestors(investorResponse.data);\n        setProperties(propertyResponse.data);\n        setInvestments(investmentResponse.data);\n      } catch (error) {\n        console.error('Error fetching data:', error);\n      }\n    };\n\n    fetchData(); // Call the fetchData function\n\n  }, []);\n\n  const renderForm = () => {\n    // Render the selected form based on the form type\n    switch (formType) {\n      case 'get_investor_data':\n        return <InvestorDataForm onSubmit={handleFormSubmit} onReset={resetFormFields} formData={formData} setFormData={setFormData} data={data} />;\n      case 'investor':\n        return <InvestorForm onSubmit={handleFormSubmit} onReset={resetFormFields} formData={formData} setFormData={setFormData} data={data} />;\n      case 'property':\n        return <PropertyForm onSubmit={handleFormSubmit} onReset={resetFormFields} formData={formData} setFormData={setFormData} data={data} />;\n      case 'investment':\n        return <InvestmentForm onSubmit={handleFormSubmit} onReset={resetFormFields} formData={formData} setFormData={setFormData} data={data} investors={investors} properties={properties} />;\n      case 'transaction':\n        return <TransactionForm onSubmit={handleFormSubmit} onReset={resetFormFields} formData={formData} setFormData={setFormData} data={data} properties={properties} investments={investments} />;\n      default:\n        return null;\n    }\n  };\n\n  return (\n    <div>\n      {/* {!state ? (\n          <Message variant='primary'>Only Admin can access this Resource</Message>\n        ) : ( */}\n        {/* <div> */}\n      <div className='header_div'>\n        <h1>Grand Home Investments Database</h1>\n        {/* Buttons to switch between forms */}\n        <div>\n          <button onClick={() => setFormType('get_investor_data')}>Get Investor Data</button>\n          <button onClick={() => setFormType('investor')}>Add Investor</button>\n          <button onClick={() => setFormType('property')}>Add Property</button>\n          <button onClick={() => setFormType('investment')}>Add Investment</button>\n          <button onClick={() => setFormType('transaction')}>Add Transaction</button>\n        </div>\n          <div>\n            {successMessage ? (\n              <div className=\"message-container success-message\">\n                <h3>{successMessage}</h3>\n              </div>\n            ) : null}\n\n            {errorMessage ? (\n              <div className=\"message-container error-message\">\n                <h3>{errorMessage}</h3>\n              </div>\n            ) : null}\n          </div>\n      </div>\n        {renderForm()}\n      {/* </div> */}\n      {/* )} */}\n    </div>\n  );\n}\n\nexport default DBScreen;","import React from 'react'\n\nfunction RandomScreen() {\n  return (\n    <div>RandomScreen</div>\n  )\n}\n\nexport default RandomScreen","import React, { useEffect, useState } from 'react'\nimport { Col, Row } from 'react-bootstrap'\nimport Message from '../components/Message'\nimport ProjectLayout from '../components/ProjectLayout'\nimport Loader from '../components/Loader'\n\nconst CompletedProjectsScreen = () => {\n\n    const [projects, setProjects] = useState([])\n    const [loading, setLoading] = useState(true)\n    console.log(projects)\n\n    useEffect(() => {\n        fetch(\"/completedprojects\", {\n            method: \"get\",\n            headers: {\n                \"Content-Type\": \"application/json\"\n            }\n        })\n        .then(res => res.json())\n        .then(data => {\n            setProjects(data.projects)\n            setLoading(false)\n        })\n        .catch(err => {\n            setLoading(false)\n        });\n    }, [])\n\n\n    return (\n        <div style={{ height: '70%' }}>\n            <h2 className='text-center'>Completed Projects</h2>\n            {   \n                loading ? <Loader />\n                :\n                <Row>\n                    {!projects ? <Message variant='primary'>No Projects Yet...</Message>\n                    :\n                    projects.map(project => (\n                        <Col key={project._id} sm={12} md={6} lg={4} xl={3}> \n                                <ProjectLayout project={project} />\n                        </Col>\n                    ))}\n                </Row>\n            }\n        </div>\n    )\n}\n\n\nexport default CompletedProjectsScreen;","import React, { useEffect, useState } from 'react'\nimport { Col, Row } from 'react-bootstrap'\nimport Message from '../components/Message'\nimport ProjectLayout from '../components/ProjectLayout'\nimport Loader from '../components/Loader'\n\nconst RenovationProjectsScreen = () => {\n\n    const [projects, setProjects] = useState([])\n    const [loading, setLoading] = useState(true)\n    console.log(projects)\n\n    useEffect(() => {\n        fetch(\"/renovationprojects\", {\n            method: \"get\",\n            headers: {\n                \"Content-Type\": \"application/json\"\n            }\n        })\n        .then(res => res.json())\n        .then(data => {\n            setProjects(data.projects)\n            setLoading(false)\n        })\n        .catch(err => {\n            setLoading(false)\n        });\n    }, [])\n\n\n    return (\n        <div style={{ height: '70%' }}>\n            <h2 className='text-center'>Projects Under Renovation</h2>\n            {   \n                loading ? <Loader />\n                :\n                <Row>\n                    {!projects ? <Message variant='primary'>No Projects Yet...</Message>\n                    :\n                    projects.map(project => (\n                        <Col key={project._id} sm={12} md={6} lg={4} xl={3}> \n                                <ProjectLayout project={project} />\n                        </Col>\n                    ))}\n                </Row>\n            }\n        </div>\n    )\n}\n\n\nexport default RenovationProjectsScreen;","import React, { useEffect, useState } from 'react'\nimport { Col, Row } from 'react-bootstrap'\nimport Message from '../components/Message'\nimport ProjectLayout from '../components/ProjectLayout'\nimport Loader from '../components/Loader'\n\nconst UpcomingProjectsScreen = () => {\n    const [projects, setProjects] = useState([])\n    const [loading, setLoading] = useState(true)\n    console.log(projects)\n\n    useEffect(() => {\n        fetch(\"/upcomingprojects\", {\n            method: \"get\",\n            headers: {\n                \"Content-Type\": \"application/json\"\n            }\n        })\n        .then(res => res.json())\n        .then(data => {\n            setProjects(data.projects)\n            setLoading(false)\n        })\n        .catch(err => {\n            setLoading(false)\n        });\n    }, [])\n\n\n    return (\n        <div style={{ height: '70%' }}>\n            <h2 className='text-center'>Upcoming Projects</h2>\n            {   \n                loading ? <Loader />\n                :\n                <Row>\n                    {!projects ? <Message variant='primary'>No Projects Yet...</Message>\n                    :\n                    projects.map(project => (\n                        <Col key={project._id} sm={12} md={6} lg={4} xl={3}> \n                                <ProjectLayout project={project} />\n                        </Col>\n                    ))}\n                </Row>\n            }\n        </div>\n    )\n}\n\n\nexport default UpcomingProjectsScreen;","import React, { createContext, useContext, useReducer, useEffect } from \"react\";\nimport { useHistory } from \"react-router-dom\"\nimport HomeScreen from './Screens/HomeScreen'\nimport ProjectsScreen from './Screens/ProjectsScreen'\nimport AdminScreen from './Screens/AdminScreen'\nimport LoginScreen from './Screens/LoginScreen'\nimport Header from './components/Header'\nimport { BrowserRouter, Route } from \"react-router-dom\";\nimport { initialState, reducer } from \"./reducer/reducer\";\nimport Footer from \"./components/Footer\";\nimport DBScreen from \"./Screens/DBScreen\";\nimport RandomScreen from \"./Screens/RandomScreen\";\nimport CompletedProjectsScreen from \"./Screens/CompletedProjectsScreen\";\nimport RenovationProjectsScreen from \"./Screens/RenovationProjects.Screen\";\nimport UpcomingProjectsScreen from \"./Screens/UpcomingProjectsScreen\";\n\n\nexport const UserContext = createContext();\n\nfunction Routing() {\n  const history = useHistory();\n  const { state, dispatch } = useContext(UserContext);\n\n  useEffect(() => {\n    const user = JSON.parse(localStorage.getItem(\"user\"));\n    if(user) {\n      dispatch({ type: \"USER\", payload: user })\n    }\n  }, [dispatch, history])\n\n  return (\n    <div className='py-4 px-5'>\n      <Route path='/admin' component={AdminScreen} exact/>\n      <Route path='/login' component={LoginScreen} exact />\n      <Route path='/completedprojects' component={CompletedProjectsScreen} exact/>\n      <Route path='/renovationprojects' component={RenovationProjectsScreen} exact/>\n      <Route path='/upcomingprojects' component={UpcomingProjectsScreen} exact/>\n      <Route path='/projects' component={ProjectsScreen} />\n      <Route path='/random' component={RandomScreen} />\n      <Route path='/db' component={DBScreen} />\n      <Route path='/' component={HomeScreen} exact/>\n  </div>\n  )\n}\n\n\nfunction App() {\n  const [ state, dispatch ] = useReducer(reducer, initialState);\n\n  return (\n    <UserContext.Provider value={{ state, dispatch }}>\n      <BrowserRouter>\n        <Header />\n        <Routing />\n        <Footer />\n      </BrowserRouter>\n    </UserContext.Provider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './bootstrap.min.css'\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}